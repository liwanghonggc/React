1.什么是虚拟DOM?
  本质:用JS对象的形式来模拟页面上的DOM嵌套关系,虚拟DOM是以JS对象的形式存在的
  目的:为了实现页面元素的高效更新

2、Diff算法
   简单理解,为了实现高效更新,需要对比新旧两颗DOM树的区别,因此引入Diff算法.
   1)tree diff:新旧两颗DOM树,逐层对比的过程,就是Tree Diff. 当整颗DOM逐层对比完毕,则所有需要被按需更新的元素,必然能够找到

   2)component diff:在进行Tree Diff的时候,每一层中组件级别的对比,叫做 Component Diff.
                  如果对比前后,组件的类型相同,则暂时认为此组件不需要被更新
                  如果对比前后,组件类型不同,则需要移除旧组件,创建新组件,并追加到页面上

   3)element diff:在进行组件对比的时候,如果两个组件类型相同,则需要进行元素级别的对比,这叫做 Element Diff

3、webpack
   1)webpack-dev-server
     npm run dev,可以热部署打包更新的文件

     webpack-dev-server打包好的main.js是托管到了内存中,所以在项目根目录中看不到,但是我们可以认为,在项目根目录中,有一个看不见的main.js

   2)html-webpack-plugin
     npm i html-webpack-plugin -D,将index.html等页面生成到内存中去,这样操作更快

4、JSX语法
   1) 为jsx中的元素添加class类名,需要使用className来替代class,htmlFor替换label的for属性

5、在导入组件的时候,如何省略组件的.jsx后缀名及配置根目录
   打开 webpack.config.js,并在导出的配置对象中,新增如下节点
   resolve: {
       //表示这几个文件的后缀名可以省略不写
       extensions: ['.js', '.jsx', '.json'],

       //import Hello from '@/components/Hello'
       //这里的@符号表示项目根目录的src这一目录,需要在webpack.config.js中配置
       alias: {
               '@': path.join(__dirname, './src')
       }
   }

6、创建组件的两种方式
   具体创建方式看04、07
   区别
   1)使用class关键字创建的组件,有自己的私有数据(this.state)和生命周期函数
   2)使用function创建的组件,只有props,没有自己的私有数据和生命周期函数

   用构造函数创建出来的组件:叫做“无状态组件”[无状态组件今后用的不多]
   用class关键字创建出来的组件:叫做“有状态组件”[今后用的最多]

   什么情况下使用有状态组件?什么情况下使用无状态组件?
   1)如果一个组件需要有自己的私有数据,则推荐使用class创建的有状态组件
   2)React官方说:无状态组件,由于没有自己的state和生命周期函数,所以运行效率会比有状态组件稍微高一些

7、配置可以导入css组件
   步骤
   1)安装组件,cnpm i style-loader css-loader -D
   2)配置webpack.config.js文件,{test: /\.css$/, use: ['style-loader', 'css-loader?modules']}
   3)在需要的组件中import导入样式表,并接收模块化的CSS样式对象
     import cssObj from '../css/CmtList.css'
   4)在需要的HTML标签上使用className指定模块化的样式
     <h1 className={cssObj.title}>评论列表组件</h1>

6、使用localIdentName自定义生成的类名格式
   {test: /\.css$/, use: ['style-loader', 'css-loader?modules&localIdentName=[path][name]-[local]-[hash:5]']}

7、在项目中启用模块化并同时使用bootstrap
   1) 安装bootstrap,cnpm i bootstrap@3.3.7 -S,@后面指定版本号,否则安装的是最新版本
   2) 安装url-loader,cnpm i url-loader -D(引入bootstrap之后,webpack无法处理字体图标,需要安装url-loader并配置webpack.config.js)
   3) 安装file-loader,cnpm i file-loader -D(url-loader内部依赖file-loader)
   4) 把自己的样式表,定义为.scss 文件,第三方的样式表还是以.css结尾,我们只需要为自己的.scss文件,启用模块化即可
      运行cnpm i sass-loader node-sass -D 安装能够解析scss文件的loader
   5) 添加loader规则,打包处理scss文件的loader
      {test: /\.scss$/, use: ['style-loader', 'css-loader?modules&localIdentName=[path][name]-[local]-[hash:5]', 'sass-loader']}
   6) 导入import 'bootstrap/dist/css/bootstrap.css'

8、React中绑定事件推荐方式
   <button onClick={ () => this.show('传参') }>按钮</button>

   // 事件的处理函数,需要定义为一个箭头函数,然后赋值给函数名称
   show = (arg1) => {
       console.log('show方法' + arg1)
   }

